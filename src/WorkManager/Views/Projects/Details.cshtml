@model WorkManager.Models.ProjectsViewModels.DetailsViewModel

@{
    ViewData["Title"] = Model.Title;
}

<h2>Details</h2>

<div>
    <div class="jumbotron">
        <h2>@Html.DisplayFor(model => model.Title)</h2>
        <div id="today-statistic">
            <span id="today-duration"></span>
            <img id="is-running" src="~/images/circle_green.png"/>
            <img id="not-running" src="~/images/circle_red.png" />
        </div>
        <h6>@Html.DisplayFor(model => model.Description)</h6>
        <hr />
        <button class="btn btn-primary btn-lg" 
                href="#" 
                role="button"
                id="start-btn">Start</button>
        <button class="btn btn-primary btn-lg" 
                href="#" 
                role="button"
                id="stop-btn">Stop</button>
        <hr />
        <div id="calendar"></div>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section scripts
{
    <script src="~/lib/moment/moment.js"></script>
    <script src="~/lib/moment-duration-format/lib/moment-duration-format.js"></script>

    <script>
        $('#start-btn').click(function () {
            $.get('@Url.Action("start", "timers", new { projectId = Model.Id })')
                .done(updateTodayStatistic());
        });

        $('#stop-btn').click(function () {
            $.get('@Url.Action("stop", "timers", new { projectId = Model.Id })')
                .done(updateTodayStatistic());
        });

        updateTodayStatistic();
        window.setInterval(updateTodayStatistic, 1000);

        function updateTodayStatistic()
        {
                $.get({
                    url: '@Url.Action("TodayStatistics", "Timers", new { projectId = Model.Id })',
                    success: function (data) {
                        $('#today-duration').html(moment.duration(data.duration).format("hh:mm:ss", { trim : false }));
                        $('#is-running').css('display', data.isRunning ? 'inline' : 'none');
                        $('#not-running').css('display', data.isRunning ? 'none' : 'inline');
                    }
                });
        }
    </script>

    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.0/themes/smoothness/jquery-ui.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.0/jquery-ui.min.js"></script>
    <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.0.0/fullcalendar.min.css" rel="stylesheet" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.0.0/fullcalendar.min.js" type="text/javascript"></script>
    <link media="print" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.0.0/fullcalendar.print.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                timeFormat: 'HH:mm',
                firstDay: @((int)Model.Culture.DateTimeFormat.FirstDayOfWeek),
                events: function (start, end, timezone, callback) {
                    $.get('@Url.Action("Statistics", "Timers", new { projectId = Model.Id })',
                        {
                            start: this.start,
                            end: this.end,
                            groupBy: 'day'
                        },
                        function (res) {
                            var events = [];
                            res.forEach(function (day) {
                                // Duration event (allDay event which shows common duration of timers for day) 
                                events.push({
                                    title: "",
                                    start: day.date,
                                    duration: day.duration,
                                    allDay: true,
                                    backgroundColor: "#78DBE2"
                                });
                                day.childs.forEach(function (timer) {
                                    events.push({
                                        title: "",
                                        start: timer.started,
                                        end: timer.stopped,
                                    });
                                });
                            });
                            callback(events);
                        },
                        'json');
                },
                eventRender: function (event, element) {
                    if (event.duration) {
                        var cont = element.find(".fc-content");
                        cont.html(event.duration);
                    }
                },
                views: {
                    month: {
                        eventLimit: 5
                    }
                }
            })
        });
    </script>
}
