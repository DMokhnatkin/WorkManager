@model WorkManager.Models.ProjectsViewModels.DetailsViewModel
@using WorkManager.Models.Norms

@{
    ViewData["Title"] = Model.Title;
}

<h2>Details</h2>

<div ng-app="detailsApp">
    <div>
        <a asp-action="List"> &lt;&lt; Back to List</a>
    </div>
    <div class="jumbotron" ng-controller="progressController" ng-init="init(@Model.Id)">
        <h1>@Html.DisplayFor(model => model.Title)</h1>
        <p class="lead">@Html.DisplayFor(model => model.Description)</p>
        <div class="lead">
            <div class="alert alert-info" style="display:inline;">
                <span class="h3" ng-bind-template="{{formatDuration(realtimeInfo.progress.excecuted)}}"></span>
                @if (Model.Norm.Type == NormType.Day)
                {
                    <span class="h3">/ @Model.Norm.Goal</span>
                }
                <img ng-show="realtimeInfo.isRunning" src="~/images/clock.gif" />
            </div>
            <div ng-show="realtimeInfo.progress.isCompleted" role="button" data-toggle="tooltip" title="Norm is done" class="alert alert-success" style="display:inline;">&#x2714;</div>
            <div ng-show="!realtimeInfo.progress.isCompleted" role="button" data-toggle="tooltip" title="Norm isn't done" class="alert alert-danger" style="display:inline;">&#xD7;</div>
        </div>
        <div>
            <button class="btn btn-primary btn-lg"
                    href="#"
                    role="button"
                    ng-click="start()">
                Start
            </button>
            <button class="btn btn-primary btn-lg"
                    href="#"
                    role="button"
                    ng-click="stop()">
                Stop
            </button>
        </div>
        <div class="lead">
            @if (Model.Norm.Type == NormType.Week)
            {
                <p>Week goal : @Model.Norm.Goal</p>
            }
            @if (Model.Norm.Type == NormType.Month)
            {
                <p>Month goal : @Model.Norm.Goal</p>
            }
            @if (Model.Norm.Type == NormType.Project)
            {
                <p>Project goal : @Model.Norm.Goal</p>
            }
        </div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-default btn-lg">Edit</a>
        <hr />
        <div id="calendar"></div>
    </div>
</div>

@section scripts
{
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular.min.js"></script>
    <script src="~/app/detailsApp.js"></script>
    <script src="~/app/progressController.js"></script>
    <script src="~/app/progressFactory.js"></script>
    <script src="~/lib/moment/moment.js"></script>

    <script src="~/lib/moment-duration-format/lib/moment-duration-format.js"></script>

    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.0/themes/smoothness/jquery-ui.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.0/jquery-ui.min.js"></script>
    <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.0.0/fullcalendar.min.css" rel="stylesheet" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.0.0/fullcalendar.min.js" type="text/javascript"></script>
    <link media="print" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.0.0/fullcalendar.print.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                timeFormat: 'HH:mm',
                firstDay: @((int)Model.GetCulture().DateTimeFormat.FirstDayOfWeek),
                events: function (start, end, timezone, callback) {
                    $.get('@Url.Action("Statistics", "Timers", new { projectId = Model.Id })',
                        {
                            start: this.start,
                            end: this.end,
                            groupBy: 'day'
                        },
                        function (res) {
                            var events = [];
                            res.forEach(function (day) {
                                // Duration event (allDay event which shows common duration of timers for day) 
                                events.push({
                                    title: "",
                                    start: day.date,
                                    duration: day.duration,
                                    allDay: true,
                                    backgroundColor: "#04B45F",
                                    borderColor: "#04B45F"
                                });
                                day.childs.forEach(function (timer) {
                                    events.push({
                                        title: "",
                                        start: timer.started,
                                        end: timer.stopped,
                                    });
                                });
                            });
                            callback(events);
                        },
                        'json');
                },
                eventRender: function (event, element, view) {
                    if (event.duration) {
                        var cont = element.find(".fc-content");
                        cont.html(moment.duration(event.duration).format(view.options.timeFormat, {trim: false}));
                    }
                },
                views: {
                    month: {
                        eventLimit: 5
                    }
                }
            })
        });
    </script>
}
